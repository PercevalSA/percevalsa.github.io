<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on cyberstuff and halfworking projects</title><link>https://percevalsa.github.io/posts/</link><description>Recent content in Blog on cyberstuff and halfworking projects</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 24 Feb 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://percevalsa.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Open Windows URL shortcut in Linux</title><link>https://percevalsa.github.io/posts/open-mswinurl-in-linux/</link><pubDate>Mon, 24 Feb 2025 00:00:00 +0000</pubDate><guid>https://percevalsa.github.io/posts/open-mswinurl-in-linux/</guid><description>Introduction I am working on a robot project with my brother. We share data (datasheets, pictures&amp;hellip;) in a folder synchronized on dropbox. He only uses Windows and I am mainly using Linux (debian based distros with GNOME Desktop Environment to be precise). He tend to use Windows URL file to save wbe shortcut in a sharable way. But those file are not openable by default in Linux.
Here is a way to automatically open Microsoft Windows URL shortcut file in Linux default browser.</description></item><item><title>macOS configuration after a fresh install</title><link>https://percevalsa.github.io/posts/macos-configuration/</link><pubDate>Fri, 20 Jan 2023 00:00:00 +0000</pubDate><guid>https://percevalsa.github.io/posts/macos-configuration/</guid><description>Don&amp;rsquo;t write .DS_Store file on removable devices:
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true\ defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true\ Install custom host file to make internet safer
cp hosts hosts.bak sudo cp hosts hosts.bak sudo cp /Users/perceval/Workspace/hosts/alternates/fakenews-gambling-porn/hosts /etc/hosts sudo dscacheutil -flushcache;sudo killall -HUP mDNSResponder udo killall mDNSResponderHelper sudo cp /etc/hosts.new /etc/hosts sudo killall -HUP mDNSResponder sudo killall mDNSResponderHelper sudo dscacheutil -flushcache sudo launchctl start mDNSResponder head /etc/hosts add a command line access to sublime text</description></item><item><title>librespot on piCorePlayer</title><link>https://percevalsa.github.io/posts/librespot-picore-player/</link><pubDate>Sat, 05 Nov 2022 00:00:00 +0000</pubDate><guid>https://percevalsa.github.io/posts/librespot-picore-player/</guid><description>Introduction All the code is available in my github repo
I wanted a stable headless Spotify player for my living room. It has to run on a RaspberryPi and boot fast in order to turn it on only when needed with a switch. One of the solution would be Volumio or HifiBerry but they take too much time to boot. piCorePlayer is a good alternative but it has too much stuff installed by default and the Spotify extension is based on an outdated extension.</description></item><item><title>Yocto build on external SSD in devcontainers</title><link>https://percevalsa.github.io/posts/yocto-cache-ssd/</link><pubDate>Sat, 05 Nov 2022 00:00:00 +0000</pubDate><guid>https://percevalsa.github.io/posts/yocto-cache-ssd/</guid><description>I manage and build multiple yocto distributions at work. The performances guidelines advise to use another disk than the one the system is running on. As I have a laptop I only have one internal SSD. Therefore I need to use an external SSD to store my yocto files (downloads in DL_DIR , build in TMPDIR and cache in SSTATE_DIR). It is a good idea to do so for three reasons :</description></item><item><title>HifiBerry OS configuration</title><link>https://percevalsa.github.io/posts/hifiberryos-configuration/</link><pubDate>Thu, 20 Oct 2022 00:00:00 +0000</pubDate><guid>https://percevalsa.github.io/posts/hifiberryos-configuration/</guid><description>HifiBerry OS Customisations Before moving to my custom version of piCorePlayer with my own Spotify extension I used to run HifiBerry on my raspberryPi. Here are some modifications I made to improve performances.
SSH for security I always harden all my Linux boxes. more on how to improve ssh security. Configure your ssh server to allow key authentication only.
Add my ssh key to to authorized key for easier remote control</description></item></channel></rss>